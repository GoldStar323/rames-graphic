- server: enclose column names in ``
- SSL: check if avail and adjust settings page

- client deployment process to write/document:
    - Ubuntu 18.04
    - Ubuntu 20.04
    - Win
    - Mac
    - build on older ubuntu with Qt 5.9 &openssl 1.0 /// and 20.04 with Qt 5.15 & openssl 1.1
    - package 2 deb for both ubuntu versions / openssl 1.0 / 1.1
    - package 2 appimages for both ubuntu versions / openssl 1.0 / 1.1
    - add openssl in dependencies for the deb package / warn it must be avail with the appimage
    - win
    - mac

## pipeline tools first

- status & history
- implement status
- implement stepstatus
- step: use template file (store in step folder as "PROJECTID_G_stepID_template.ext", open with corresponding app (add versionning later).)
- addon api: add open function description
- addon api: when activated, check current file (and update info)

## Other

- add opertator== in ramobject
- pipeedit: filetype list not always updated
- dockwidget: fix bug when tabifying
- update json example in getProject(s) server reference
- move console to a dock widget
- sequence order
- set offline when token is set invalid (server timeout)
- mutliple shots addition
- add meta to the doc
- factorize listmanagerwidget to ramobjectsmanagerwidget using simpleObjectsList
- factorize the objectEditWidget -> use the new base class for all editors
    - useredit
    - templatestep
    - template asset group
    - states
    - filetypes
- Pipe editor: when creating a pipe, select it after creation
- shortName and name sanitation (Ramses.validateName && Ramses.validateShortName, and server side too)
- implement main table
- implement shots table 
- implement assets table
- option to restore removed items (admin/lead only)
- implement offline mode
- implement import-export data.
    - Server side: https://www.tutorialspoint.com/php/perform_mysql_backup_php.htm // do it regularly ? option in config.php , protect sql dumps folder with htaccess (create it in install.php)
    - Client side: define a data structure (json?) // Copy the sqlite local db once a day
- option to choose tray icon
- test remove from database then refresh client
- test other modifications from database then refresh client
- test using two clients simultaneously (from different virtual machines)

WIP 


RamStatus

- Server
- [x] sql db
- [x] server (get in projects/sequences)
- [x] server doc
- Client
- [x] dbi
- [x] RamShot
- [x] RamSequence shot list
- [x] RamProject shot(uuid) & removeshot(uuid)
- [x] ramses (get in gotsequences -> gotshots)
- UI
- [ ] shoteditwidget
- [ ] shotmanagerwidget
- [ ] doc
